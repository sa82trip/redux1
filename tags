!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
App	src/App.js	/^function App() {$/;"	F
Buttons	src/Button.js	/^const Buttons = ({ onClick, name, value }) => {$/;"	F
Counter	src/Counter.js	/^const Counter = ({ counter }) => {$/;"	F
DECREMENT	src/actions/index.js	/^export const DECREMENT = "DECREMENT";$/;"	E
INCREMENT	src/actions/index.js	/^export const INCREMENT = "INCREMENT";$/;"	E
allActions	src/actions/index.js	/^const allActions = {$/;"	O
checkValidServiceWorker	src/serviceWorker.js	/^function checkValidServiceWorker(swUrl, config) {$/;"	F
count	src/App.js	/^  const count = useSelector((store) => store.counterReducer);$/;"	F
counterInitialState	src/reducers/index.js	/^const counterInitialState = 0;$/;"	V
counterReducer	src/reducers/index.js	/^const counterReducer = (state = counterInitialState, action) => {$/;"	F
decrement	src/actions/index.js	/^  decrement,$/;"	V
decrement	src/actions/index.js	/^const decrement = (number) => {$/;"	F
getByText	src/App.test.js	/^  const { getByText } = render(<App \/>);$/;"	V
handleClick	src/App.js	/^  const handleClick = (e) => {$/;"	F
headers	src/serviceWorker.js	/^    headers: { 'Service-Worker': 'script' },$/;"	P
increment	src/actions/index.js	/^  increment,$/;"	V
increment	src/actions/index.js	/^const increment = (number) => {$/;"	F
initializer	src/App.js	/^  const initializer = () => {$/;"	F
number	src/actions/index.js	/^    number,$/;"	V
onstatechange	src/serviceWorker.js	/^        installingWorker.onstatechange = () => {$/;"	M
onupdatefound	src/serviceWorker.js	/^      registration.onupdatefound = () => {$/;"	M
publicUrl	src/serviceWorker.js	/^    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);$/;"	V
regex	src/App.js	/^    const regex = \/[0-9]\/;$/;"	V
register	src/serviceWorker.js	/^export function register(config) {$/;"	E
registerValidSW	src/serviceWorker.js	/^function registerValidSW(swUrl, config) {$/;"	F
serviceWorker	src/index.js	/^import * as serviceWorker from ".\/serviceWorker";$/;"	I
type	src/actions/index.js	/^    type: DECREMENT,$/;"	P
type	src/actions/index.js	/^    type: INCREMENT,$/;"	P
unregister	src/serviceWorker.js	/^export function unregister() {$/;"	E
